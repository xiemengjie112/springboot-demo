<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmj.springbootdemo.mapper.student.StudentMapper">
    <resultMap id="BaseResultMap" type="com.xmj.springbootdemo.entity.student.Student">
        <id column="pk_student" property="pkStudent" jdbcType="VARCHAR"/>
        <result column="dr" property="dr" jdbcType="VARCHAR"/>
        <result column="student_name" property="studentName" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        pk_student, dr, student_name, age
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.xmj.springbootdemo.entity.student.StudentExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from student
        where pk_student = #{pkStudent,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from student
        where pk_student = #{pkStudent,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.xmj.springbootdemo.entity.student.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xmj.springbootdemo.entity.student.Student">
        insert into student (pk_student, dr, student_name,
        age)
        values (#{pkStudent,jdbcType=VARCHAR}, #{dr,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.xmj.springbootdemo.entity.student.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkStudent != null">
                pk_student,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="age != null">
                age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkStudent != null">
                #{pkStudent,jdbcType=VARCHAR},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xmj.springbootdemo.entity.student.StudentExample"
            resultType="java.lang.Integer">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.pkStudent != null">
                pk_student = #{record.pkStudent,jdbcType=VARCHAR},
            </if>
            <if test="record.dr != null">
                dr = #{record.dr,jdbcType=VARCHAR},
            </if>
            <if test="record.studentName != null">
                student_name = #{record.studentName,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set pk_student = #{record.pkStudent,jdbcType=VARCHAR},
        dr = #{record.dr,jdbcType=VARCHAR},
        student_name = #{record.studentName,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xmj.springbootdemo.entity.student.Student">
        update student
        <set>
            <if test="dr != null">
                dr = #{dr,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        where pk_student = #{pkStudent,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xmj.springbootdemo.entity.student.Student">
        update student
        set dr = #{dr,jdbcType=VARCHAR},
        student_name = #{studentName,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER}
        where pk_student = #{pkStudent,jdbcType=VARCHAR}
    </update>

    <select id="findStudents" resultType="java.util.Map">
        select
        dr as dr,
        student_name as studentName,
        age as age
        from student
    </select>

    <insert id="addStudents" parameterType="java.util.List">
        insert into student (pk_student, dr, student_name,age)
        values
        <foreach collection="students" item="student"  separator=",">
        (#{student.pkStudent,jdbcType=VARCHAR}, #{student.dr,jdbcType=VARCHAR}, #{student.studentName,jdbcType=VARCHAR},
        #{student.age,jdbcType=INTEGER})
        </foreach>
    </insert>


</mapper>